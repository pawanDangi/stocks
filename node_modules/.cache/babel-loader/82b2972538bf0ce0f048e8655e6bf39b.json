{"ast":null,"code":"var _jsxFileName = \"/Users/pdangi/intertrust/media/test-task-media/src/columns/Streams.jsx\";\nimport React from 'react';\nimport { Grid, Switch } from '@material-ui/core/';\nimport { FileCopy, ArrowDropUp, ArrowDropDown } from '@material-ui/icons/';\nimport { Link } from 'react-router-dom';\nimport copyToClipboard from '../utils/copy-to-clipboard';\nimport timeSince from '../utils/time-since';\n\nvar columns = function columns(sortBy, onStatusChange) {\n  var Arrow = sortBy.desc ? React.createElement(ArrowDropUp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }) : React.createElement(ArrowDropDown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  });\n  return [{\n    Header: function Header() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"Name \", sortBy.id === 'name' ? Arrow : '');\n    },\n    id: 'name',\n    minWidth: 200,\n    accessor: function accessor(d) {\n      return d.name;\n    }\n  }, {\n    Header: function Header() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Id \", sortBy.id === 'id' ? Arrow : '');\n    },\n    id: 'id',\n    minWidth: 200,\n    accessor: function accessor(d) {\n      return d.id;\n    },\n    Cell: function Cell(row) {\n      return React.createElement(Link, {\n        to: \"streams/\".concat(row.original.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, row.value);\n    }\n  }, {\n    Header: 'Url',\n    accessor: 'url',\n    sortable: false,\n    minWidth: 300,\n    Cell: function Cell(row) {\n      return React.createElement(Grid, {\n        container: true,\n        spacing: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 11,\n        className: \"long-url\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, row.value), React.createElement(Grid, {\n        item: true,\n        xs: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, row.value ? React.createElement(FileCopy, {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: function onClick() {\n          copyToClipboard(row.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }) : ''));\n    }\n  }, {\n    Header: 'DAI Url',\n    accessor: 'daiUrl',\n    sortable: false,\n    minWidth: 300,\n    Cell: function Cell(row) {\n      return React.createElement(Grid, {\n        container: true,\n        spacing: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 11,\n        className: \"long-url\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, row.value), React.createElement(Grid, {\n        item: true,\n        xs: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, row.value ? React.createElement(FileCopy, {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: function onClick() {\n          copyToClipboard(row.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }) : ''));\n    }\n  }, {\n    Header: 'Type',\n    accessor: 'type',\n    sortable: false\n  }, {\n    Header: 'Format',\n    accessor: 'format',\n    sortable: false\n  }, {\n    Header: 'Tags',\n    id: 'tags',\n    sortable: false,\n    accessor: function accessor(d) {\n      return (d.tags || []).join(',');\n    }\n  }, {\n    Header: function Header() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Floor Price \", sortBy.id === 'floorPrice' ? Arrow : '');\n    },\n    accessor: 'floorPrice',\n    style: {\n      textAlign: 'center'\n    },\n    minWidth: 150\n  }, {\n    Header: function Header() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Status \", sortBy.id === 'status' ? Arrow : '');\n    },\n    id: 'status',\n    style: {\n      textAlign: 'center'\n    },\n    accessor: function accessor(d) {\n      return React.createElement(Switch, {\n        key: \"\".concat(d.id, \"-\").concat(d.name),\n        style: {\n          height: '18px'\n        },\n        checked: d.status,\n        onChange: function onChange() {\n          onStatusChange(d);\n        },\n        value: d.status,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      });\n    }\n  }, {\n    Header: function Header() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Updated On \", sortBy.id === 'updatedAt' ? Arrow : '');\n    },\n    id: 'updatedAt',\n    accessor: function accessor(d) {\n      return timeSince(d.updatedAt);\n    },\n    style: {\n      textAlign: 'center'\n    },\n    minWidth: 200\n  }];\n};\n\nexport default columns;","map":{"version":3,"sources":["/Users/pdangi/intertrust/media/test-task-media/src/columns/Streams.jsx"],"names":["React","Grid","Switch","FileCopy","ArrowDropUp","ArrowDropDown","Link","copyToClipboard","timeSince","columns","sortBy","onStatusChange","Arrow","desc","Header","id","minWidth","accessor","d","name","Cell","row","original","value","sortable","cursor","tags","join","style","textAlign","height","status","updatedAt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, Switch } from '@material-ui/core/';\nimport { FileCopy, ArrowDropUp, ArrowDropDown } from '@material-ui/icons/';\nimport { Link } from 'react-router-dom';\n\nimport copyToClipboard from '../utils/copy-to-clipboard';\nimport timeSince from '../utils/time-since';\n\nconst columns = (sortBy, onStatusChange) => {\n  const Arrow = sortBy.desc ? <ArrowDropUp /> : <ArrowDropDown />;\n  return [\n    {\n      Header: () => <div>Name {sortBy.id === 'name' ? Arrow : ''}</div>,\n      id: 'name',\n      minWidth: 200,\n      accessor: d => d.name\n    },\n    {\n      Header: () => <div>Id {sortBy.id === 'id' ? Arrow : ''}</div>,\n      id: 'id',\n      minWidth: 200,\n      accessor: d => d.id,\n      Cell: row => <Link to={`streams/${row.original.id}`}>{row.value}</Link>\n    },\n    {\n      Header: 'Url',\n      accessor: 'url',\n      sortable: false,\n      minWidth: 300,\n      Cell: row => (\n        <Grid container spacing={0}>\n          <Grid item xs={11} className=\"long-url\">\n            {row.value}\n          </Grid>\n          <Grid item xs={1}>\n            {row.value ? (\n              <FileCopy\n                style={{ cursor: 'pointer' }}\n                onClick={() => {\n                  copyToClipboard(row.value);\n                }}\n              />\n            ) : (\n              ''\n            )}\n          </Grid>\n        </Grid>\n      )\n    },\n    {\n      Header: 'DAI Url',\n      accessor: 'daiUrl',\n      sortable: false,\n      minWidth: 300,\n      Cell: row => (\n        <Grid container spacing={0}>\n          <Grid item xs={11} className=\"long-url\">\n            {row.value}\n          </Grid>\n          <Grid item xs={1}>\n            {row.value ? (\n              <FileCopy\n                style={{ cursor: 'pointer' }}\n                onClick={() => {\n                  copyToClipboard(row.value);\n                }}\n              />\n            ) : (\n              ''\n            )}\n          </Grid>\n        </Grid>\n      )\n    },\n    { Header: 'Type', accessor: 'type', sortable: false },\n    { Header: 'Format', accessor: 'format', sortable: false },\n    {\n      Header: 'Tags',\n      id: 'tags',\n      sortable: false,\n      accessor: d => (d.tags || []).join(',')\n    },\n    {\n      Header: () => (\n        <div>Floor Price {sortBy.id === 'floorPrice' ? Arrow : ''}</div>\n      ),\n      accessor: 'floorPrice',\n      style: { textAlign: 'center' },\n      minWidth: 150\n    },\n    {\n      Header: () => <div>Status {sortBy.id === 'status' ? Arrow : ''}</div>,\n      id: 'status',\n      style: { textAlign: 'center' },\n      accessor: d => (\n        <Switch\n          key={`${d.id}-${d.name}`}\n          style={{ height: '18px' }}\n          checked={d.status}\n          onChange={() => {\n            onStatusChange(d);\n          }}\n          value={d.status}\n          color=\"primary\"\n        />\n      )\n    },\n    {\n      Header: () => (\n        <div>Updated On {sortBy.id === 'updatedAt' ? Arrow : ''}</div>\n      ),\n      id: 'updatedAt',\n      accessor: d => timeSince(d.updatedAt),\n      style: { textAlign: 'center' },\n      minWidth: 200\n    }\n  ];\n};\n\nexport default columns;\n"]},"metadata":{},"sourceType":"module"}