{"ast":null,"code":"import _classCallCheck from \"/Users/pdangi/intertrust/ssai/epa-ui-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pdangi/intertrust/ssai/epa-ui-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pdangi/intertrust/ssai/epa-ui-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pdangi/intertrust/ssai/epa-ui-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pdangi/intertrust/ssai/epa-ui-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pdangi/intertrust/ssai/epa-ui-api/client/src/components/line-chart/LineChart.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport moment from 'moment';\nimport '../../css/line-chart.css';\nimport FullScreen from './FullScreen';\nimport CustomHeight from './CustomHeight';\n\nvar LineChart =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LineChart, _React$Component);\n\n  function LineChart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LineChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LineChart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isFullScreen: false,\n      data: [],\n      parseDate: d3.timeParse('%m/%d/%Y %H:%M')\n    };\n\n    _this.type = function (d) {\n      var parseDate = _this.state.parseDate;\n      return {\n        date: parseDate(moment(d.date).format('M/D/YYYY HH:mm')),\n        value: +d.value\n      };\n    };\n\n    _this.fullScreen = function (isFullScreen) {\n      _this.setState({\n        isFullScreen: isFullScreen\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LineChart, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var data = this.props.data;\n      this.setState({\n        data: data.map(this.type)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isFullScreen = _this$state.isFullScreen,\n          data = _this$state.data;\n      var _this$props = this.props,\n          isFullScreenView = _this$props.isFullScreenView,\n          id = _this$props.id,\n          title = _this$props.title,\n          svgHeight = _this$props.svgHeight;\n      return isFullScreen ? React.createElement(FullScreen, {\n        fullScreen: this.fullScreen,\n        data: data,\n        id: id,\n        title: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }) : React.createElement(CustomHeight, {\n        isFullScreenView: isFullScreenView,\n        fullScreen: this.fullScreen,\n        svgHeight: svgHeight,\n        data: data,\n        id: id,\n        title: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return LineChart;\n}(React.Component);\n\nLineChart.defaultProps = {\n  title: '',\n  svgHeight: 500,\n  isFullScreenView: false\n};\nLineChart.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  svgHeight: PropTypes.number,\n  data: PropTypes.instanceOf(Array).isRequired,\n  isFullScreenView: PropTypes.bool\n};\nexport default LineChart;","map":{"version":3,"sources":["/Users/pdangi/intertrust/ssai/epa-ui-api/client/src/components/line-chart/LineChart.jsx"],"names":["React","PropTypes","d3","moment","FullScreen","CustomHeight","LineChart","state","isFullScreen","data","parseDate","timeParse","type","d","date","format","value","fullScreen","setState","props","map","isFullScreenView","id","title","svgHeight","Component","defaultProps","propTypes","string","isRequired","number","instanceOf","Array","bool"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,0BAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;IAEMC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,YAAY,EAAE,KADR;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,SAAS,EAAER,EAAE,CAACS,SAAH,CAAa,gBAAb;AAHL,K;;UAWRC,I,GAAO,UAAAC,CAAC,EAAI;AAAA,UACFH,SADE,GACY,MAAKH,KADjB,CACFG,SADE;AAEV,aAAO;AACLI,QAAAA,IAAI,EAAEJ,SAAS,CAACP,MAAM,CAACU,CAAC,CAACC,IAAH,CAAN,CAAeC,MAAf,CAAsB,gBAAtB,CAAD,CADV;AAELC,QAAAA,KAAK,EAAE,CAACH,CAAC,CAACG;AAFL,OAAP;AAID,K;;UAEDC,U,GAAa,UAAAT,YAAY,EAAI;AAC3B,YAAKU,QAAL,CAAc;AAAEV,QAAAA,YAAY,EAAZA;AAAF,OAAd;AACD,K;;;;;;;yCAfoB;AAAA,UACXC,IADW,GACF,KAAKU,KADH,CACXV,IADW;AAEnB,WAAKS,QAAL,CAAc;AAAET,QAAAA,IAAI,EAAEA,IAAI,CAACW,GAAL,CAAS,KAAKR,IAAd;AAAR,OAAd;AACD;;;6BAcQ;AAAA,wBACwB,KAAKL,KAD7B;AAAA,UACCC,YADD,eACCA,YADD;AAAA,UACeC,IADf,eACeA,IADf;AAAA,wBAE4C,KAAKU,KAFjD;AAAA,UAECE,gBAFD,eAECA,gBAFD;AAAA,UAEmBC,EAFnB,eAEmBA,EAFnB;AAAA,UAEuBC,KAFvB,eAEuBA,KAFvB;AAAA,UAE8BC,SAF9B,eAE8BA,SAF9B;AAIP,aAAOhB,YAAY,GACjB,oBAAC,UAAD;AACE,QAAA,UAAU,EAAE,KAAKS,UADnB;AAEE,QAAA,IAAI,EAAER,IAFR;AAGE,QAAA,EAAE,EAAEa,EAHN;AAIE,QAAA,KAAK,EAAEC,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADiB,GAQjB,oBAAC,YAAD;AACE,QAAA,gBAAgB,EAAEF,gBADpB;AAEE,QAAA,UAAU,EAAE,KAAKJ,UAFnB;AAGE,QAAA,SAAS,EAAEO,SAHb;AAIE,QAAA,IAAI,EAAEf,IAJR;AAKE,QAAA,EAAE,EAAEa,EALN;AAME,QAAA,KAAK,EAAEC,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF;AAiBD;;;;EA7CqBvB,KAAK,CAACyB,S;;AAgD9BnB,SAAS,CAACoB,YAAV,GAAyB;AACvBH,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,SAAS,EAAE,GAFY;AAGvBH,EAAAA,gBAAgB,EAAE;AAHK,CAAzB;AAMAf,SAAS,CAACqB,SAAV,GAAsB;AACpBL,EAAAA,EAAE,EAAErB,SAAS,CAAC2B,MAAV,CAAiBC,UADD;AAEpBN,EAAAA,KAAK,EAAEtB,SAAS,CAAC2B,MAFG;AAGpBJ,EAAAA,SAAS,EAAEvB,SAAS,CAAC6B,MAHD;AAIpBrB,EAAAA,IAAI,EAAER,SAAS,CAAC8B,UAAV,CAAqBC,KAArB,EAA4BH,UAJd;AAKpBR,EAAAA,gBAAgB,EAAEpB,SAAS,CAACgC;AALR,CAAtB;AAQA,eAAe3B,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport '../../css/line-chart.css';\nimport FullScreen from './FullScreen';\nimport CustomHeight from './CustomHeight';\n\nclass LineChart extends React.Component {\n  state = {\n    isFullScreen: false,\n    data: [],\n    parseDate: d3.timeParse('%m/%d/%Y %H:%M')\n  };\n\n  componentWillMount() {\n    const { data } = this.props;\n    this.setState({ data: data.map(this.type) });\n  }\n\n  type = d => {\n    const { parseDate } = this.state;\n    return {\n      date: parseDate(moment(d.date).format('M/D/YYYY HH:mm')),\n      value: +d.value\n    };\n  };\n\n  fullScreen = isFullScreen => {\n    this.setState({ isFullScreen });\n  };\n\n  render() {\n    const { isFullScreen, data } = this.state;\n    const { isFullScreenView, id, title, svgHeight } = this.props;\n\n    return isFullScreen ? (\n      <FullScreen\n        fullScreen={this.fullScreen}\n        data={data}\n        id={id}\n        title={title}\n      />\n    ) : (\n      <CustomHeight\n        isFullScreenView={isFullScreenView}\n        fullScreen={this.fullScreen}\n        svgHeight={svgHeight}\n        data={data}\n        id={id}\n        title={title}\n      />\n    );\n  }\n}\n\nLineChart.defaultProps = {\n  title: '',\n  svgHeight: 500,\n  isFullScreenView: false\n};\n\nLineChart.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  svgHeight: PropTypes.number,\n  data: PropTypes.instanceOf(Array).isRequired,\n  isFullScreenView: PropTypes.bool\n};\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}