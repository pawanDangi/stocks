{"ast":null,"code":"import _toConsumableArray from \"/Users/pdangi/intertrust/media/test-task-media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { uniqBy } from 'lodash';\nimport { ADD_STOCKS } from '../actionType';\n\nvar stocks = function stocks() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_STOCKS:\n      return uniqBy([].concat(_toConsumableArray(state), _toConsumableArray(action.data)), function (value) {\n        return value[0];\n      }).map(function (d) {\n        var isOld = false;\n        action.data.forEach(function (s) {\n          if (d[2] && d[0] === s[0]) {\n            console.log(d);\n          }\n        });\n        return [].concat(_toConsumableArray(d), [new Date()]);\n      });\n    // action.data.map(d => {\n    //   // console.log('d=====', d[0]);\n    //   state.map(s => {\n    //     // console.log(s[0] === d[0]);\n    //   });\n    //   return [...d, new Date()];\n    // }) || state\n\n    default:\n      return state;\n  }\n};\n\nexport default stocks;","map":{"version":3,"sources":["/Users/pdangi/intertrust/media/test-task-media/src/reducers/stocks.js"],"names":["uniqBy","ADD_STOCKS","stocks","state","action","type","data","value","map","d","isOld","forEach","s","console","log","Date"],"mappings":";AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,UAAL;AACE,aAAOD,MAAM,8BAAKG,KAAL,sBAAeC,MAAM,CAACE,IAAtB,IAA6B,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAAC,CAAD,CAAT;AAAA,OAAlC,CAAN,CAAsDC,GAAtD,CAA0D,UAAAC,CAAC,EAAI;AACpE,YAAMC,KAAK,GAAG,KAAd;AACAN,QAAAA,MAAM,CAACE,IAAP,CAAYK,OAAZ,CAAoB,UAAAC,CAAC,EAAI;AACvB,cAAIH,CAAC,CAAC,CAAD,CAAD,IAAQA,CAAC,CAAC,CAAD,CAAD,KAASG,CAAC,CAAC,CAAD,CAAtB,EAA2B;AACzBC,YAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ;AACD;AACF,SAJD;AAKA,4CAAWA,CAAX,IAAc,IAAIM,IAAJ,EAAd;AACD,OARM,CAAP;AASF;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACE,aAAOZ,KAAP;AAnBJ;AAqBD,CAtBD;;AAwBA,eAAeD,MAAf","sourcesContent":["import { uniqBy } from 'lodash';\nimport { ADD_STOCKS } from '../actionType';\n\nconst stocks = (state = [], action) => {\n  switch (action.type) {\n    case ADD_STOCKS:\n      return uniqBy([...state, ...action.data], value => value[0]).map(d => {\n        const isOld = false;\n        action.data.forEach(s => {\n          if (d[2] && d[0] === s[0]) {\n            console.log(d);\n          }\n        });\n        return [...d, new Date()];\n      });\n    // action.data.map(d => {\n    //   // console.log('d=====', d[0]);\n    //   state.map(s => {\n    //     // console.log(s[0] === d[0]);\n    //   });\n    //   return [...d, new Date()];\n    // }) || state\n    default:\n      return state;\n  }\n};\n\nexport default stocks;\n"]},"metadata":{},"sourceType":"module"}