{"ast":null,"code":"import moment from 'moment';\n\nvar timeSince = function timeSince(date) {\n  var seconds = Math.ceil((moment(new Date()) - moment(date)) / 1000);\n  var interval = Math.ceil(seconds / 3600);\n\n  if (interval > 1 && interval <= 23) {\n    return \"\".concat(interval, \" hours ago\");\n  }\n\n  if (interval > 23 && interval <= 47) {\n    return 'yesterday';\n  }\n\n  if (interval > 47) {\n    return moment(date).format('MMM DD, YYYY');\n  }\n\n  interval = Math.ceil(seconds / 60);\n\n  if (interval > 1) {\n    return \"\".concat(interval, \" minutes ago\");\n  }\n\n  return Math.ceil(seconds) === 0 ? 'just now' : \"\".concat(Math.ceil(seconds), \"seconds ago\");\n};\n\nexport default timeSince;","map":{"version":3,"sources":["/Users/pdangi/intertrust/media/test-task-media/src/utils/since.js"],"names":["moment","timeSince","date","seconds","Math","ceil","Date","interval","format"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,IAAI,EAAI;AACxB,MAAMC,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAU,CAACL,MAAM,CAAC,IAAIM,IAAJ,EAAD,CAAN,GAAqBN,MAAM,CAACE,IAAD,CAA5B,IAAsC,IAAhD,CAAhB;AAEA,MAAIK,QAAQ,GAAGH,IAAI,CAACC,IAAL,CAAUF,OAAO,GAAG,IAApB,CAAf;;AACA,MAAII,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,IAAI,EAAhC,EAAoC;AAClC,qBAAUA,QAAV;AACD;;AACD,MAAIA,QAAQ,GAAG,EAAX,IAAiBA,QAAQ,IAAI,EAAjC,EAAqC;AACnC,WAAO,WAAP;AACD;;AACD,MAAIA,QAAQ,GAAG,EAAf,EAAmB;AACjB,WAAOP,MAAM,CAACE,IAAD,CAAN,CAAaM,MAAb,CAAoB,cAApB,CAAP;AACD;;AAEDD,EAAAA,QAAQ,GAAGH,IAAI,CAACC,IAAL,CAAUF,OAAO,GAAG,EAApB,CAAX;;AACA,MAAII,QAAQ,GAAG,CAAf,EAAkB;AAChB,qBAAUA,QAAV;AACD;;AACD,SAAOH,IAAI,CAACC,IAAL,CAAUF,OAAV,MAAuB,CAAvB,GACH,UADG,aAEAC,IAAI,CAACC,IAAL,CAAUF,OAAV,CAFA,gBAAP;AAGD,CArBD;;AAuBA,eAAeF,SAAf","sourcesContent":["import moment from 'moment';\n\nconst timeSince = date => {\n  const seconds = Math.ceil((moment(new Date()) - moment(date)) / 1000);\n\n  let interval = Math.ceil(seconds / 3600);\n  if (interval > 1 && interval <= 23) {\n    return `${interval} hours ago`;\n  }\n  if (interval > 23 && interval <= 47) {\n    return 'yesterday';\n  }\n  if (interval > 47) {\n    return moment(date).format('MMM DD, YYYY');\n  }\n\n  interval = Math.ceil(seconds / 60);\n  if (interval > 1) {\n    return `${interval} minutes ago`;\n  }\n  return Math.ceil(seconds) === 0\n    ? 'just now'\n    : `${Math.ceil(seconds)}seconds ago`;\n};\n\nexport default timeSince;\n"]},"metadata":{},"sourceType":"module"}