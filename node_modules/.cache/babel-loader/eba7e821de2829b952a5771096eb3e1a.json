{"ast":null,"code":"import _classCallCheck from \"/Users/pdangi/intertrust/media/test-task-media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pdangi/intertrust/media/test-task-media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pdangi/intertrust/media/test-task-media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pdangi/intertrust/media/test-task-media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pdangi/intertrust/media/test-task-media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pdangi/intertrust/media/test-task-media/src/components/AlertDialog.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core/';\n\nvar AlertDialog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AlertDialog, _React$Component);\n\n  function AlertDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AlertDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AlertDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false\n    };\n\n    _this.handleClose = function () {\n      var handleClose = _this.props.alert.handleClose;\n\n      _this.setState({\n        open: false\n      }, function () {\n        if (handleClose) {\n          handleClose();\n        }\n      });\n    };\n\n    _this.handleSuccess = function () {\n      var handleSuccess = _this.props.alert.handleSuccess;\n\n      _this.setState({\n        open: false\n      }, function () {\n        if (handleSuccess) {\n          handleSuccess();\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AlertDialog, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      var open = nextProps.alert.open;\n\n      if (open) {\n        this.setState({\n          open: false\n        }, function () {\n          _this2.setState({\n            open: open\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var open = this.state.open;\n      var _this$props$alert = this.props.alert,\n          title = _this$props$alert.title,\n          text = _this$props$alert.text,\n          disagree = _this$props$alert.disagree,\n          agree = _this$props$alert.agree;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        open: open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"alert-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, title), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        id: \"alert-dialog-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, text)), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, disagree), React.createElement(Button, {\n        onClick: this.handleSuccess,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, agree))));\n    }\n  }]);\n\n  return AlertDialog;\n}(React.Component);\n\nAlertDialog.propTypes = {\n  alert: PropTypes.shape({\n    open: PropTypes.bool.isRequired,\n    title: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    disagree: PropTypes.string.isRequired,\n    agree: PropTypes.string.isRequired\n  }).isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    alert: state.alert\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps() {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertDialog);","map":{"version":3,"sources":["/Users/pdangi/intertrust/media/test-task-media/src/components/AlertDialog.jsx"],"names":["React","PropTypes","connect","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","AlertDialog","state","open","handleClose","props","alert","setState","handleSuccess","nextProps","title","text","disagree","agree","Component","propTypes","shape","bool","isRequired","string","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from '@material-ui/core/';\n\nclass AlertDialog extends React.Component {\n  state = {\n    open: false\n  };\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      alert: { open }\n    } = nextProps;\n    if (open) {\n      this.setState({ open: false }, () => {\n        this.setState({ open });\n      });\n    }\n  }\n\n  handleClose = () => {\n    const {\n      alert: { handleClose }\n    } = this.props;\n    this.setState({ open: false }, () => {\n      if (handleClose) {\n        handleClose();\n      }\n    });\n  };\n\n  handleSuccess = () => {\n    const {\n      alert: { handleSuccess }\n    } = this.props;\n    this.setState({ open: false }, () => {\n      if (handleSuccess) {\n        handleSuccess();\n      }\n    });\n  };\n\n  render() {\n    const { open } = this.state;\n    const {\n      alert: { title, text, disagree, agree }\n    } = this.props;\n\n    return (\n      <div>\n        <Dialog\n          open={open}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              {text}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              {disagree}\n            </Button>\n            <Button onClick={this.handleSuccess} color=\"primary\">\n              {agree}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nAlertDialog.propTypes = {\n  alert: PropTypes.shape({\n    open: PropTypes.bool.isRequired,\n    title: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    disagree: PropTypes.string.isRequired,\n    agree: PropTypes.string.isRequired\n  }).isRequired\n};\n\nconst mapStateToProps = state => ({\n  alert: state.alert\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AlertDialog);\n"]},"metadata":{},"sourceType":"module"}