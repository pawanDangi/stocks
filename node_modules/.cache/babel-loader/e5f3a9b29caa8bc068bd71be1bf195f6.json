{"ast":null,"code":"import _classCallCheck from \"/Users/pdangi/intertrust/ssai/epa-ui-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pdangi/intertrust/ssai/epa-ui-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pdangi/intertrust/ssai/epa-ui-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pdangi/intertrust/ssai/epa-ui-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pdangi/intertrust/ssai/epa-ui-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pdangi/intertrust/ssai/epa-ui-api/client/src/components/streams/SlotMarkupForm.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography, Grid, TextField, Button } from '@material-ui/core/';\nimport { Add as AddIcon } from '@material-ui/icons/';\nimport { primary } from '../../utils/colors';\n\nvar styles = function styles(theme) {\n  return {\n    grid: {\n      paddingTop: '5px !important',\n      paddingBottom: '5px !important',\n      display: 'flex',\n      alignItems: 'center',\n      '& div': {\n        background: 'none'\n      }\n    },\n    addMarker: {\n      background: primary.main,\n      color: primary.contrastText,\n      '&:hover': {\n        background: primary.dark\n      },\n      '&:focus': {\n        textDecoration: 'none',\n        outline: 'none'\n      }\n    },\n    timeInput: {\n      width: '50%',\n      marginRight: '5px'\n    },\n    timeTxt: {\n      paddingRight: '5px'\n    }\n  };\n};\n\nvar SlotMarkupForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SlotMarkupForm, _Component);\n\n  function SlotMarkupForm() {\n    _classCallCheck(this, SlotMarkupForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SlotMarkupForm).apply(this, arguments));\n  }\n\n  _createClass(SlotMarkupForm, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 10,\n        className: classes.grid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 7,\n        md: 8,\n        className: classes.grid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.timeTxt,\n        variant: \"subheading\",\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Start\"), React.createElement(TextField, {\n        id: \"ep-markers-start-min-input\",\n        variant: \"outlined\",\n        fullWidth: true,\n        className: classes.timeInput,\n        label: \"min\",\n        type: \"number\",\n        margin: \"dense\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"ep-markers-start-sec-input\",\n        variant: \"outlined\",\n        fullWidth: true,\n        className: classes.timeInput,\n        label: \"sec\",\n        type: \"number\",\n        margin: \"dense\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 5,\n        md: 4,\n        className: classes.grid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        className: classes.timeTxt,\n        variant: \"subheading\",\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Duration\"), React.createElement(TextField, {\n        id: \"ep-markers-duration-sec-input\",\n        variant: \"outlined\",\n        fullWidth: true,\n        className: classes.timeInput,\n        type: \"number\",\n        label: \"sec\",\n        margin: \"dense\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })))), React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        className: classes.grid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        \"aria-label\": \"Add\",\n        className: classes.addMarker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(AddIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SlotMarkupForm;\n}(Component);\n\nSlotMarkupForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SlotMarkupForm);","map":{"version":3,"sources":["/Users/pdangi/intertrust/ssai/epa-ui-api/client/src/components/streams/SlotMarkupForm.jsx"],"names":["React","Component","PropTypes","withStyles","Typography","Grid","TextField","Button","Add","AddIcon","primary","styles","theme","grid","paddingTop","paddingBottom","display","alignItems","background","addMarker","main","color","contrastText","dark","textDecoration","outline","timeInput","width","marginRight","timeTxt","paddingRight","SlotMarkupForm","classes","props","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography, Grid, TextField, Button } from '@material-ui/core/';\nimport { Add as AddIcon } from '@material-ui/icons/';\nimport { primary } from '../../utils/colors';\n\nconst styles = theme => ({\n  grid: {\n    paddingTop: '5px !important',\n    paddingBottom: '5px !important',\n    display: 'flex',\n    alignItems: 'center',\n    '& div': {\n      background: 'none'\n    }\n  },\n  addMarker: {\n    background: primary.main,\n    color: primary.contrastText,\n    '&:hover': {\n      background: primary.dark\n    },\n    '&:focus': {\n      textDecoration: 'none',\n      outline: 'none'\n    }\n  },\n  timeInput: {\n    width: '50%',\n    marginRight: '5px'\n  },\n  timeTxt: {\n    paddingRight: '5px'\n  }\n});\n\nclass SlotMarkupForm extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <Grid item xs={10} className={classes.grid}>\n          <Grid container spacing={8}>\n            <Grid item xs={7} md={8} className={classes.grid}>\n              <Typography\n                className={classes.timeTxt}\n                variant=\"subheading\"\n                component=\"p\"\n              >\n                Start\n              </Typography>\n              <TextField\n                id=\"ep-markers-start-min-input\"\n                variant=\"outlined\"\n                fullWidth\n                className={classes.timeInput}\n                label=\"min\"\n                type=\"number\"\n                margin=\"dense\"\n              />\n              <TextField\n                id=\"ep-markers-start-sec-input\"\n                variant=\"outlined\"\n                fullWidth\n                className={classes.timeInput}\n                label=\"sec\"\n                type=\"number\"\n                margin=\"dense\"\n              />\n            </Grid>\n            <Grid item xs={5} md={4} className={classes.grid}>\n              <Typography\n                className={classes.timeTxt}\n                variant=\"subheading\"\n                component=\"p\"\n              >\n                Duration\n              </Typography>\n              <TextField\n                id=\"ep-markers-duration-sec-input\"\n                variant=\"outlined\"\n                fullWidth\n                className={classes.timeInput}\n                type=\"number\"\n                label=\"sec\"\n                margin=\"dense\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={2} className={classes.grid}>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            aria-label=\"Add\"\n            className={classes.addMarker}\n          >\n            <AddIcon />\n          </Button>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\nSlotMarkupForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SlotMarkupForm);\n"]},"metadata":{},"sourceType":"module"}