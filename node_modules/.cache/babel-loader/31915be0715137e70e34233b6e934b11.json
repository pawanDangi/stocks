{"ast":null,"code":"import _objectSpread from \"/Users/pdangi/intertrust/media/test-task-media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/pdangi/intertrust/media/test-task-media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/pdangi/intertrust/media/test-task-media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport config from '../config.json';\nimport snackbar from '../utils/snackbar';\nvar configVar = config[process.env.REACT_APP_ENVIRONMENT];\nexport var fetchStreams =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(token) {\n    var page,\n        pageSize,\n        orderBy,\n        search,\n        response,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = _args.length > 1 && _args[1] !== undefined ? _args[1] : 0;\n            pageSize = _args.length > 2 && _args[2] !== undefined ? _args[2] : 10;\n            orderBy = _args.length > 3 && _args[3] !== undefined ? _args[3] : '';\n            search = _args.length > 4 && _args[4] !== undefined ? _args[4] : '';\n            _context.prev = 4;\n            _context.next = 7;\n            return axios({\n              url: \"\".concat(configVar.API_HOST).concat(configVar.BASE_URL, \"/streams?page=\").concat(page, \"&pageSize=\").concat(pageSize, \"&orderBy=\").concat(orderBy, \"&search=\").concat(search),\n              method: 'get',\n              headers: {\n                'Content-Type': ' application/json;charset=UTF-8',\n                token: token\n              }\n            });\n\n          case 7:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](4);\n            snackbar({\n              variant: 'error',\n              message: _context.t0.response.data.message || 'Error while fetching streams data.'\n            });\n\n            if (_context.t0.response.status === 401) {\n              window.location = '/login';\n            }\n\n            return _context.abrupt(\"return\", []);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[4, 11]]);\n  }));\n\n  return function fetchStreams(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var fetchStream =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(token, id) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return axios({\n              url: \"\".concat(configVar.API_HOST).concat(configVar.BASE_URL, \"/streams/\").concat(id),\n              method: 'get',\n              headers: {\n                'Content-Type': ' application/json;charset=UTF-8',\n                token: token\n              }\n            });\n\n          case 3:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response);\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            return _context2.abrupt(\"return\", new Error(_context2.t0));\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 7]]);\n  }));\n\n  return function fetchStream(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var createStream =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(token, value) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return axios({\n              url: \"\".concat(configVar.API_HOST).concat(configVar.BASE_URL, \"/streams\"),\n              method: 'post',\n              data: _objectSpread({}, value),\n              headers: {\n                'Content-Type': ' application/json;charset=UTF-8',\n                token: token\n              }\n            });\n\n          case 3:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response);\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            return _context3.abrupt(\"return\", new Error(_context3.t0));\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 7]]);\n  }));\n\n  return function createStream(_x4, _x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var updateStream =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(token, id, value) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return axios({\n              url: \"\".concat(configVar.API_HOST).concat(configVar.BASE_URL, \"/streams/\").concat(id),\n              method: 'patch',\n              data: _objectSpread({}, value),\n              headers: {\n                'Content-Type': ' application/json;charset=UTF-8',\n                token: token\n              }\n            });\n\n          case 3:\n            response = _context4.sent;\n            return _context4.abrupt(\"return\", response);\n\n          case 7:\n            _context4.prev = 7;\n            _context4.t0 = _context4[\"catch\"](0);\n            return _context4.abrupt(\"return\", new Error(_context4.t0));\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 7]]);\n  }));\n\n  return function updateStream(_x6, _x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var deleteStream =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(token, id) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return axios({\n              url: \"\".concat(configVar.API_HOST).concat(configVar.BASE_URL, \"/streams/\").concat(id),\n              method: 'delete',\n              headers: {\n                'Content-Type': ' application/json;charset=UTF-8',\n                token: token\n              }\n            });\n\n          case 3:\n            response = _context5.sent;\n            return _context5.abrupt(\"return\", response);\n\n          case 7:\n            _context5.prev = 7;\n            _context5.t0 = _context5[\"catch\"](0);\n            return _context5.abrupt(\"return\", new Error(_context5.t0));\n\n          case 10:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 7]]);\n  }));\n\n  return function deleteStream(_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var validateStream =\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(token, url) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return axios({\n              url: \"\".concat(configVar.API_HOST).concat(configVar.BASE_URL, \"/streams/validate\"),\n              method: 'post',\n              data: {\n                url: url\n              },\n              headers: {\n                'Content-Type': ' application/json;charset=UTF-8',\n                token: token\n              }\n            });\n\n          case 3:\n            response = _context6.sent;\n            return _context6.abrupt(\"return\", response);\n\n          case 7:\n            _context6.prev = 7;\n            _context6.t0 = _context6[\"catch\"](0);\n            return _context6.abrupt(\"return\", new Error(_context6.t0));\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[0, 7]]);\n  }));\n\n  return function validateStream(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/pdangi/intertrust/media/test-task-media/src/api/stocks.js"],"names":["axios","config","snackbar","configVar","process","env","REACT_APP_ENVIRONMENT","fetchStreams","token","page","pageSize","orderBy","search","url","API_HOST","BASE_URL","method","headers","response","data","variant","message","status","window","location","fetchStream","id","Error","createStream","value","updateStream","deleteStream","validateStream"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport config from '../config.json';\nimport snackbar from '../utils/snackbar';\n\nconst configVar = config[process.env.REACT_APP_ENVIRONMENT];\n\nexport const fetchStreams = async (\n  token,\n  page = 0,\n  pageSize = 10,\n  orderBy = '',\n  search = ''\n) => {\n  try {\n    const response = await axios({\n      url: `${configVar.API_HOST}${\n        configVar.BASE_URL\n      }/streams?page=${page}&pageSize=${pageSize}&orderBy=${orderBy}&search=${search}`,\n      method: 'get',\n      headers: {\n        'Content-Type': ' application/json;charset=UTF-8',\n        token\n      }\n    });\n    return response.data;\n  } catch (error) {\n    snackbar({\n      variant: 'error',\n      message:\n        error.response.data.message || 'Error while fetching streams data.'\n    });\n    if (error.response.status === 401) {\n      window.location = '/login';\n    }\n    return [];\n  }\n};\n\nexport const fetchStream = async (token, id) => {\n  try {\n    const response = await axios({\n      url: `${configVar.API_HOST}${configVar.BASE_URL}/streams/${id}`,\n      method: 'get',\n      headers: {\n        'Content-Type': ' application/json;charset=UTF-8',\n        token\n      }\n    });\n    return response;\n  } catch (error) {\n    return new Error(error);\n  }\n};\n\nexport const createStream = async (token, value) => {\n  try {\n    const response = await axios({\n      url: `${configVar.API_HOST}${configVar.BASE_URL}/streams`,\n      method: 'post',\n      data: {\n        ...value\n      },\n      headers: {\n        'Content-Type': ' application/json;charset=UTF-8',\n        token\n      }\n    });\n    return response;\n  } catch (error) {\n    return new Error(error);\n  }\n};\n\nexport const updateStream = async (token, id, value) => {\n  try {\n    const response = await axios({\n      url: `${configVar.API_HOST}${configVar.BASE_URL}/streams/${id}`,\n      method: 'patch',\n      data: {\n        ...value\n      },\n      headers: {\n        'Content-Type': ' application/json;charset=UTF-8',\n        token\n      }\n    });\n    return response;\n  } catch (error) {\n    return new Error(error);\n  }\n};\n\nexport const deleteStream = async (token, id) => {\n  try {\n    const response = await axios({\n      url: `${configVar.API_HOST}${configVar.BASE_URL}/streams/${id}`,\n      method: 'delete',\n      headers: {\n        'Content-Type': ' application/json;charset=UTF-8',\n        token\n      }\n    });\n    return response;\n  } catch (error) {\n    return new Error(error);\n  }\n};\n\nexport const validateStream = async (token, url) => {\n  try {\n    const response = await axios({\n      url: `${configVar.API_HOST}${configVar.BASE_URL}/streams/validate`,\n      method: 'post',\n      data: {\n        url\n      },\n      headers: {\n        'Content-Type': ' application/json;charset=UTF-8',\n        token\n      }\n    });\n    return response;\n  } catch (error) {\n    return new Error(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}