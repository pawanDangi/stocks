{"ast":null,"code":"import _toConsumableArray from \"/Users/pdangi/intertrust/media/test-task-media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { uniqBy } from 'lodash';\nimport { ADD_STOCKS } from '../actionType';\n\nvar stocks = function stocks() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_STOCKS:\n      uniqBy(action.data, function (value) {\n        console.log(value);\n        return true;\n      });\n      return action.data.map(function (d) {\n        // console.log('d=====', d[0]);\n        state.map(function (s) {// console.log(s[0] === d[0]);\n        });\n        return [].concat(_toConsumableArray(d), [new Date()]);\n      }) || state;\n\n    default:\n      return state;\n  }\n};\n\nexport default stocks;","map":{"version":3,"sources":["/Users/pdangi/intertrust/media/test-task-media/src/reducers/stocks.js"],"names":["uniqBy","ADD_STOCKS","stocks","state","action","type","data","value","console","log","map","d","s","Date"],"mappings":";AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,UAAL;AACED,MAAAA,MAAM,CAACI,MAAM,CAACE,IAAR,EAAc,UAAAC,KAAK,EAAI;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,eAAO,IAAP;AACD,OAHK,CAAN;AAIA,aACEH,MAAM,CAACE,IAAP,CAAYI,GAAZ,CAAgB,UAAAC,CAAC,EAAI;AACnB;AACAR,QAAAA,KAAK,CAACO,GAAN,CAAU,UAAAE,CAAC,EAAI,CACb;AACD,SAFD;AAGA,4CAAWD,CAAX,IAAc,IAAIE,IAAJ,EAAd;AACD,OAND,KAMMV,KAPR;;AASF;AACE,aAAOA,KAAP;AAhBJ;AAkBD,CAnBD;;AAqBA,eAAeD,MAAf","sourcesContent":["import { uniqBy } from 'lodash';\nimport { ADD_STOCKS } from '../actionType';\n\nconst stocks = (state = [], action) => {\n  switch (action.type) {\n    case ADD_STOCKS:\n      uniqBy(action.data, value => {\n        console.log(value);\n        return true;\n      });\n      return (\n        action.data.map(d => {\n          // console.log('d=====', d[0]);\n          state.map(s => {\n            // console.log(s[0] === d[0]);\n          });\n          return [...d, new Date()];\n        }) || state\n      );\n    default:\n      return state;\n  }\n};\n\nexport default stocks;\n"]},"metadata":{},"sourceType":"module"}