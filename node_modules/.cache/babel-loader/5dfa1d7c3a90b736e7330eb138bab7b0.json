{"ast":null,"code":"import _toConsumableArray from \"/Users/pdangi/intertrust/media/test-task-media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { uniqBy } from 'lodash';\nimport { ADD_STOCKS } from '../actionType';\n\nvar stocks = function stocks() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_STOCKS:\n      return uniqBy([].concat(_toConsumableArray(state), _toConsumableArray(action.data)), function (value) {\n        return value[0];\n      }).map(function (d) {\n        var isOld = false;\n        action.data.forEach(function (s) {\n          if (d[2] && d[0] === s[0]) {\n            isOld = true;\n          }\n        });\n        console.log(isOld);\n\n        if (isOld || !d[2]) {\n          return [d[0], d[1], new Date()];\n        }\n\n        return d;\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default stocks;","map":{"version":3,"sources":["/Users/pdangi/intertrust/media/test-task-media/src/reducers/stocks.js"],"names":["uniqBy","ADD_STOCKS","stocks","state","action","type","data","value","map","d","isOld","forEach","s","console","log","Date"],"mappings":";AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,UAAL;AACE,aAAOD,MAAM,8BAAKG,KAAL,sBAAeC,MAAM,CAACE,IAAtB,IAA6B,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAAC,CAAD,CAAT;AAAA,OAAlC,CAAN,CAAsDC,GAAtD,CAA0D,UAAAC,CAAC,EAAI;AACpE,YAAIC,KAAK,GAAG,KAAZ;AACAN,QAAAA,MAAM,CAACE,IAAP,CAAYK,OAAZ,CAAoB,UAAAC,CAAC,EAAI;AACvB,cAAIH,CAAC,CAAC,CAAD,CAAD,IAAQA,CAAC,CAAC,CAAD,CAAD,KAASG,CAAC,CAAC,CAAD,CAAtB,EAA2B;AACzBF,YAAAA,KAAK,GAAG,IAAR;AACD;AACF,SAJD;AAKAG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AACA,YAAIA,KAAK,IAAI,CAACD,CAAC,CAAC,CAAD,CAAf,EAAoB;AAClB,iBAAO,CAACA,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAa,IAAIM,IAAJ,EAAb,CAAP;AACD;;AACD,eAAON,CAAP;AACD,OAZM,CAAP;;AAaF;AACE,aAAON,KAAP;AAhBJ;AAkBD,CAnBD;;AAqBA,eAAeD,MAAf","sourcesContent":["import { uniqBy } from 'lodash';\nimport { ADD_STOCKS } from '../actionType';\n\nconst stocks = (state = [], action) => {\n  switch (action.type) {\n    case ADD_STOCKS:\n      return uniqBy([...state, ...action.data], value => value[0]).map(d => {\n        let isOld = false;\n        action.data.forEach(s => {\n          if (d[2] && d[0] === s[0]) {\n            isOld = true;\n          }\n        });\n        console.log(isOld);\n        if (isOld || !d[2]) {\n          return [d[0], d[1], new Date()];\n        }\n        return d;\n      });\n    default:\n      return state;\n  }\n};\n\nexport default stocks;\n"]},"metadata":{},"sourceType":"module"}