{"ast":null,"code":"import _classCallCheck from \"/Users/pdangi/intertrust/ssai/epa-ui-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pdangi/intertrust/ssai/epa-ui-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pdangi/intertrust/ssai/epa-ui-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pdangi/intertrust/ssai/epa-ui-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pdangi/intertrust/ssai/epa-ui-api/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/pdangi/intertrust/ssai/epa-ui-api/client/src/components/streams/MarkupTypesForm.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport className from 'class-names';\nimport { FormControl, RadioGroup, FormControlLabel, Radio } from '@material-ui/core/';\n\nvar styles = function styles(theme) {\n  return {\n    markupType: {\n      display: 'flow-root',\n      width: '100%'\n    },\n    radioLabel: {\n      justifyContent: 'center',\n      margin: 0\n    },\n    cueInOut: {\n      width: '17%'\n    },\n    epMarkers: {\n      width: '19%'\n    },\n    epMarkersF: {\n      width: '29%'\n    },\n    preRoll: {\n      width: '17%'\n    },\n    autoDetect: {\n      width: '18%'\n    }\n  };\n};\n\nvar MarkupTypesForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MarkupTypesForm, _Component);\n\n  function MarkupTypesForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MarkupTypesForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MarkupTypesForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      type: ''\n    };\n\n    _this.handleMarkupType = function (e) {\n      var handleMarkupType = _this.props.handleMarkupType;\n      var type = e.target.value;\n\n      _this.setState({\n        type: type\n      }, function () {\n        handleMarkupType(type);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MarkupTypesForm, [{\n    key: \"render\",\n    value: function render() {\n      var type = this.state.type;\n      var classes = this.props.classes;\n      return React.createElement(FormControl, {\n        component: \"div\",\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(RadioGroup, {\n        \"aria-label\": \"Markup Type\",\n        name: \"markupType\",\n        className: classes.markupType,\n        value: type,\n        onChange: this.handleMarkupType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(FormControlLabel, {\n        className: className(classes.radioLabel, classes.cueInOut),\n        value: \"cueInOut\",\n        control: React.createElement(Radio, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }),\n        label: \"Cue In/Out\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        className: className(classes.radioLabel, classes.epMarkers),\n        value: \"slot\",\n        control: React.createElement(Radio, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }),\n        label: \"EP Markers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        className: className(classes.radioLabel, classes.epMarkersF),\n        value: \"frequency\",\n        control: React.createElement(Radio, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }),\n        label: \"EP Markers(Frequency)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        className: className(classes.radioLabel, classes.preRoll),\n        value: \"preRoll\",\n        control: React.createElement(Radio, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }),\n        label: \"Pre Roll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(FormControlLabel, {\n        className: className(classes.radioLabel, classes.autoDetect),\n        value: \"autoDetect\",\n        control: React.createElement(Radio, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }),\n        label: \"Auto Detect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MarkupTypesForm;\n}(Component);\n\nMarkupTypesForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n  handleMarkupType: PropTypes.func.isRequired\n};\nexport default withStyles(styles)(MarkupTypesForm);","map":{"version":3,"sources":["/Users/pdangi/intertrust/ssai/epa-ui-api/client/src/components/streams/MarkupTypesForm.jsx"],"names":["React","Component","PropTypes","withStyles","className","FormControl","RadioGroup","FormControlLabel","Radio","styles","theme","markupType","display","width","radioLabel","justifyContent","margin","cueInOut","epMarkers","epMarkersF","preRoll","autoDetect","MarkupTypesForm","state","type","handleMarkupType","e","props","target","value","setState","classes","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport className from 'class-names';\nimport {\n  FormControl,\n  RadioGroup,\n  FormControlLabel,\n  Radio\n} from '@material-ui/core/';\n\nconst styles = theme => ({\n  markupType: {\n    display: 'flow-root',\n    width: '100%'\n  },\n  radioLabel: {\n    justifyContent: 'center',\n    margin: 0\n  },\n  cueInOut: {\n    width: '17%'\n  },\n  epMarkers: {\n    width: '19%'\n  },\n  epMarkersF: {\n    width: '29%'\n  },\n  preRoll: {\n    width: '17%'\n  },\n  autoDetect: {\n    width: '18%'\n  }\n});\n\nclass MarkupTypesForm extends Component {\n  state = {\n    type: ''\n  };\n\n  handleMarkupType = e => {\n    const { handleMarkupType } = this.props;\n    const type = e.target.value;\n    this.setState({ type }, () => {\n      handleMarkupType(type);\n    });\n  };\n\n  render() {\n    const { type } = this.state;\n    const { classes } = this.props;\n    return (\n      <FormControl component=\"div\" style={{ width: '100%' }}>\n        <RadioGroup\n          aria-label=\"Markup Type\"\n          name=\"markupType\"\n          className={classes.markupType}\n          value={type}\n          onChange={this.handleMarkupType}\n        >\n          <FormControlLabel\n            className={className(classes.radioLabel, classes.cueInOut)}\n            value=\"cueInOut\"\n            control={<Radio />}\n            label=\"Cue In/Out\"\n          />\n          <FormControlLabel\n            className={className(classes.radioLabel, classes.epMarkers)}\n            value=\"slot\"\n            control={<Radio />}\n            label=\"EP Markers\"\n          />\n          <FormControlLabel\n            className={className(classes.radioLabel, classes.epMarkersF)}\n            value=\"frequency\"\n            control={<Radio />}\n            label=\"EP Markers(Frequency)\"\n          />\n          <FormControlLabel\n            className={className(classes.radioLabel, classes.preRoll)}\n            value=\"preRoll\"\n            control={<Radio />}\n            label=\"Pre Roll\"\n          />\n          <FormControlLabel\n            className={className(classes.radioLabel, classes.autoDetect)}\n            value=\"autoDetect\"\n            control={<Radio />}\n            label=\"Auto Detect\"\n          />\n        </RadioGroup>\n      </FormControl>\n    );\n  }\n}\n\nMarkupTypesForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n  handleMarkupType: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(MarkupTypesForm);\n"]},"metadata":{},"sourceType":"module"}