{"ast":null,"code":"import _classCallCheck from \"/Users/pdangi/intertrust/media/test-task-media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/pdangi/intertrust/media/test-task-media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/pdangi/intertrust/media/test-task-media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/pdangi/intertrust/media/test-task-media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/pdangi/intertrust/media/test-task-media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/Users/pdangi/intertrust/media/test-task-media/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/pdangi/intertrust/media/test-task-media/src/components/SnackbarAlert.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { CheckCircle as CheckCircleIcon, Error as ErrorIcon, Info as InfoIcon, Close as CloseIcon, Warning as WarningIcon } from '@material-ui/icons/';\nimport { green, amber } from '@material-ui/core/colors/';\nimport { IconButton, Snackbar, SnackbarContent } from '@material-ui/core/';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nvar variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nvar styles1 = function styles1(theme) {\n  return {\n    success: {\n      backgroundColor: green[600]\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark\n    },\n    info: {\n      backgroundColor: theme.palette.primary.dark\n    },\n    warning: {\n      backgroundColor: amber[700]\n    },\n    icon: {\n      fontSize: 20\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing.unit\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  };\n};\n\nfunction MySnackbarContent(props) {\n  var classes = props.classes,\n      message = props.message,\n      onClose = props.onClose,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"message\", \"onClose\", \"variant\"]);\n\n  var Icon = variantIcon[variant];\n  return React.createElement(SnackbarContent, Object.assign({\n    className: classNames(classes[variant]),\n    \"aria-describedby\": \"client-snackbar\",\n    message: React.createElement(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: classNames(classes.icon, classes.iconVariant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), message),\n    action: [React.createElement(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      className: classes.close,\n      onClick: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))]\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.shape({\n    success: PropTypes.string.isRequired,\n    error: PropTypes.string.isRequired,\n    info: PropTypes.string.isRequired,\n    warning: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    iconVariant: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired\n  }).isRequired,\n  message: PropTypes.node.isRequired,\n  onClose: PropTypes.func.isRequired,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired\n};\nvar MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nvar SnackbarAlert =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SnackbarAlert, _React$Component);\n\n  function SnackbarAlert() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SnackbarAlert);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SnackbarAlert)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false\n    };\n\n    _this.handleClose = function (event, reason) {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SnackbarAlert, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      var open = nextProps.snackbar.open;\n\n      if (open) {\n        this.setState({\n          open: false\n        }, function () {\n          _this2.setState({\n            open: open\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var open = this.state.open;\n      var snackbar = this.props.snackbar;\n      var anchorOrigin = snackbar.anchorOrigin,\n          autoHideDuration = snackbar.autoHideDuration,\n          variant = snackbar.variant,\n          message = snackbar.message;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: anchorOrigin.vertical,\n          horizontal: anchorOrigin.horizontal\n        },\n        open: open,\n        autoHideDuration: autoHideDuration,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(MySnackbarContentWrapper, {\n        onClose: this.handleClose,\n        variant: variant,\n        message: message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SnackbarAlert;\n}(React.Component);\n\nSnackbarAlert.defaultProps = {\n  snackbar: {\n    open: false,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    autoHideDuration: 3000,\n    variant: 'success',\n    message: 'This is a success message!'\n  }\n};\nSnackbarAlert.propTypes = {\n  snackbar: PropTypes.shape({\n    open: PropTypes.bool,\n    anchorOrigin: PropTypes.shape({\n      vertical: PropTypes.string,\n      horizontal: PropTypes.string\n    }),\n    autoHideDuration: PropTypes.number,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']),\n    message: PropTypes.string\n  })\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    snackbar: state.snackbar\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps() {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SnackbarAlert);","map":{"version":3,"sources":["/Users/pdangi/intertrust/media/test-task-media/src/components/SnackbarAlert.jsx"],"names":["React","PropTypes","classNames","CheckCircle","CheckCircleIcon","Error","ErrorIcon","Info","InfoIcon","Close","CloseIcon","Warning","WarningIcon","green","amber","IconButton","Snackbar","SnackbarContent","withStyles","connect","variantIcon","success","warning","error","info","styles1","theme","backgroundColor","palette","dark","primary","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","message","display","alignItems","MySnackbarContent","props","classes","onClose","variant","other","Icon","close","propTypes","shape","string","isRequired","node","func","oneOf","MySnackbarContentWrapper","SnackbarAlert","state","open","handleClose","event","reason","setState","nextProps","snackbar","anchorOrigin","autoHideDuration","vertical","horizontal","Component","defaultProps","bool","number","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {\n  CheckCircle as CheckCircleIcon,\n  Error as ErrorIcon,\n  Info as InfoIcon,\n  Close as CloseIcon,\n  Warning as WarningIcon\n} from '@material-ui/icons/';\nimport { green, amber } from '@material-ui/core/colors/';\nimport { IconButton, Snackbar, SnackbarContent } from '@material-ui/core/';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst styles1 = theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant])}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContent.propTypes = {\n  classes: PropTypes.shape({\n    success: PropTypes.string.isRequired,\n    error: PropTypes.string.isRequired,\n    info: PropTypes.string.isRequired,\n    warning: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    iconVariant: PropTypes.string.isRequired,\n    message: PropTypes.string.isRequired\n  }).isRequired,\n  message: PropTypes.node.isRequired,\n  onClose: PropTypes.func.isRequired,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\n\nclass SnackbarAlert extends React.Component {\n  state = {\n    open: false\n  };\n\n  componentWillReceiveProps(nextProps) {\n    const {\n      snackbar: { open }\n    } = nextProps;\n    if (open) {\n      this.setState({ open: false }, () => {\n        this.setState({ open });\n      });\n    }\n  }\n\n  handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { open } = this.state;\n    const { snackbar } = this.props;\n    const { anchorOrigin, autoHideDuration, variant, message } = snackbar;\n\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: anchorOrigin.vertical,\n            horizontal: anchorOrigin.horizontal\n          }}\n          open={open}\n          autoHideDuration={autoHideDuration}\n          onClose={this.handleClose}\n        >\n          <MySnackbarContentWrapper\n            onClose={this.handleClose}\n            variant={variant}\n            message={message}\n          />\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nSnackbarAlert.defaultProps = {\n  snackbar: {\n    open: false,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    autoHideDuration: 3000,\n    variant: 'success',\n    message: 'This is a success message!'\n  }\n};\n\nSnackbarAlert.propTypes = {\n  snackbar: PropTypes.shape({\n    open: PropTypes.bool,\n    anchorOrigin: PropTypes.shape({\n      vertical: PropTypes.string,\n      horizontal: PropTypes.string\n    }),\n    autoHideDuration: PropTypes.number,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']),\n    message: PropTypes.string\n  })\n};\n\nconst mapStateToProps = state => ({\n  snackbar: state.snackbar\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SnackbarAlert);\n"]},"metadata":{},"sourceType":"module"}