{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _styles = require(\"@material-ui/core/styles\");\n\nvar _Add = _interopRequireDefault(require(\"../internal/svg-icons/Add\"));\n\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 24\n    },\n\n    /* Styles applied to the icon component. */\n    icon: {\n      transition: theme.transitions.create(['transform', 'opacity'], {\n        duration: theme.transitions.duration.short\n      })\n    },\n\n    /* Styles applied to the icon component if `open={true}`. */\n    iconOpen: {\n      transform: 'rotate(45deg)'\n    },\n\n    /* Styles applied to the icon when and `openIcon` is provided & if `open={true}`. */\n    iconWithOpenIconOpen: {\n      opacity: 0\n    },\n\n    /* Styles applied to the `openIcon` if provided. */\n    openIcon: {\n      position: 'absolute',\n      transition: theme.transitions.create(['transform', 'opacity'], {\n        duration: theme.transitions.duration.short\n      }),\n      opacity: 0,\n      transform: 'rotate(-45deg)'\n    },\n\n    /* Styles applied to the `openIcon` if provided & if `open={true}`. */\n    openIconOpen: {\n      transform: 'rotate(0deg)',\n      opacity: 1\n    }\n  };\n};\n\nexports.styles = styles;\n\nfunction SpeedDialIcon(props) {\n  var _classNames;\n\n  var classes = props.classes,\n      iconProp = props.icon,\n      open = props.open,\n      openIconProp = props.openIcon,\n      other = (0, _objectWithoutProperties2.default)(props, [\"classes\", \"icon\", \"open\", \"openIcon\"]);\n  var iconClassName = (0, _classnames.default)(classes.icon, (_classNames = {}, (0, _defineProperty2.default)(_classNames, classes.iconOpen, open), (0, _defineProperty2.default)(_classNames, classes.iconWithOpenIconOpen, openIconProp && open), _classNames));\n  var openIconClassName = (0, _classnames.default)(classes.openIcon, (0, _defineProperty2.default)({}, classes.openIconOpen, open));\n\n  function formatIcon(icon, className) {\n    if (_react.default.isValidElement(icon)) {\n      return _react.default.cloneElement(icon, {\n        className: className\n      });\n    }\n\n    return icon;\n  }\n\n  return _react.default.createElement(\"span\", (0, _extends2.default)({\n    className: classes.root\n  }, other), openIconProp ? formatIcon(openIconProp, openIconClassName) : null, iconProp ? formatIcon(iconProp, iconClassName) : _react.default.createElement(_Add.default, {\n    className: iconClassName\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? SpeedDialIcon.propTypes = {\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css-api) below for more details.\r\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\r\n   * The icon to display in the SpeedDial Floating Action Button.\r\n   */\n  icon: _propTypes.default.node,\n\n  /**\r\n   * @ignore\r\n   * If `true`, the SpeedDial is open.\r\n   */\n  open: _propTypes.default.bool,\n\n  /**\r\n   * The icon to display in the SpeedDial Floating Action Button when the SpeedDial is open.\r\n   */\n  openIcon: _propTypes.default.node\n} : void 0;\nSpeedDialIcon.muiName = 'SpeedDialIcon';\n\nvar _default = (0, _styles.withStyles)(styles, {\n  name: 'MuiSpeedDialIcon'\n})(SpeedDialIcon);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}